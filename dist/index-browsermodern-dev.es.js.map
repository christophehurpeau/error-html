{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/source-map-support.js","../src/parseErrorStack.js","../src/index.js"],"sourcesContent":["import { SourceMapConsumer } from 'source-map';\nimport { retrieveSourceMap } from 'source-map-support';\n\nexport const findSourceMap = source => {\n  const sourceMap = retrieveSourceMap(source);\n  if (!sourceMap) return sourceMap;\n\n  const { url, map } = sourceMap;\n  return {\n    url,\n    map: new SourceMapConsumer(map),\n  };\n};\n","import { readFileSync } from 'fs';\nimport errorStackParser from 'error-stack-parser';\nimport { findSourceMap } from './source-map-support';\n\nexport default err => {\n  const frames = errorStackParser.parse(err);\n  const cache = new Map();\n\n  return frames.map(frame => {\n    if (frame.isNative || frame.isEval) return frame;\n\n    const fileName = frame.fileName;\n    let file;\n\n    if (BROWSER) {\n      let sourceMap;\n      const source = frame.getFileName();\n\n      if (!source) return frame;\n\n      if (cache.has(source)) {\n        sourceMap = cache.get(source);\n      } else {\n        sourceMap = findSourceMap(source);\n        cache.set(source, sourceMap);\n      }\n\n      if (sourceMap) {\n        const originalPosition = sourceMap.map.originalPositionFor({\n          source,\n          line: frame.lineNumber,\n          column: frame.columnNumber - 1,\n        });\n\n        if (originalPosition.source !== null) {\n          frame.fileName = originalPosition.source;\n          frame.lineNumber = originalPosition.line;\n          frame.columnNumber = originalPosition.column + 1;\n\n          if (sourceMap.map.sourcesContent) {\n            const indexSourceContent = sourceMap.map.sources.indexOf(originalPosition.source);\n            if (indexSourceContent !== -1) {\n              file = {\n                fileName: originalPosition.source,\n                contents: sourceMap.map.sourcesContent[indexSourceContent],\n              };\n            }\n          }\n        }\n      }\n    } else if (fileName && fileName.startsWith('/')) {\n      if (cache.has(fileName)) {\n        file = cache.get(fileName);\n      } else {\n        file = {};\n        try {\n          const fileContent = readFileSync(fileName).toString();\n          file.fileName = fileName;\n          file.contents = fileContent;\n          cache.set(fileName, file);\n        } catch (e) {\n          cache.set(fileName, (file = false));\n        }\n      }\n    }\n\n    frame.file = file;\n    return frame;\n  });\n};\n","/* eslint-disable max-len, max-lines, prettier/prettier */\n\nimport escape from 'escape-html';\nimport highlight from 'eshighlight-fb';\nimport parseErrorStack from './parseErrorStack';\n\nfunction tag(tagName, attributes, content, contentEscape) {\n  attributes = attributes || {};\n  let str = '';\n  Object.keys(attributes).forEach(key => {\n    str += ` ${key}`;\n    if (attributes[key]) {\n      str += `=\"${attributes[key] === true ? key : escape(attributes[key])}\"`;\n    }\n  });\n\n  return `<${tagName}${str}${content == null ? '/' :\n                  `>${contentEscape ? escape(content) : content}</${tagName}`}>`;\n}\n\nexport default class HtmlRenderer {\n  constructor(options) {\n    this.options = Object.assign({\n      fileProtocol: 'file',\n    }, options);\n  }\n\n  /**\n   * @ignore\n   */\n  openLocalFile(filePath, lineNumber, columnNumber) {\n    if (this.generatedPath && this.sourcePath && filePath.startsWith(this.generatedPath)) {\n      filePath = this.sourcePath + filePath.substr(this.generatedPath.length);\n    }\n\n    return `<a download href=\"${this.options.fileProtocol}://${escape(filePath)}`\n               + `${!lineNumber ? '' : `?${lineNumber}${!columnNumber ? '' : `:${columnNumber}`}`}\">`;\n  }\n\n  /**\n   * @ignore\n   */\n  replaceAppInFilePath(filePath) {\n    if (!filePath) return 'unknown';\n\n    if (this.appPath) {\n      filePath = `APP/${filePath.substr(this.appPath.length)}`;\n    }\n\n    return filePath;\n  }\n\n  /**\n   * @param {Error} error\n   */\n  render(error) {\n    let str = '<div style=\"text-align: left\">';\n    str += `<h1 style=\"background:#FFF;color:#E07308;border:0;font-size:4em;margin:0;padding:1px 2px;\">${error.name}</h1>\\n`;\n    if (error.message) {\n      str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;margin:5px 0 0;padding: 0;white-space:pre-wrap;word-wrap:break-word\">';\n      str += escape(error.message);\n      str += '</pre>';\n    }\n\n    if (!this.options.production) {\n      str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;margin:10px 0 0;padding:1px 2px;\">Stack:</h5>\\n';\n      str += `<pre style=\"background:#FFF;color:#222;border:0;margin:0\">${this.renderStack(error)}</pre>`;\n      str += '<small><em>Click on the line number to display/hide the content file !</em></small>';\n\n      str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;margin:0;padding:1px 2px;\">Source Stack:</h5>\\n';\n      str += `<pre style=\"background:#FFF;color:#222;border:0;margin:0\">${escape(error.stack)}</pre>`;\n    }\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  renderStack(error) {\n    const frames = parseErrorStack(error);\n\n    let str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n    frames.forEach((frame, i) => {\n      if ((frame.file && frame.file.contents)) {\n        str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;cursor:pointer\" '\n            // eslint-disable-next-line\n            + `onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display=='none'?'block':'none';\">`;\n      }\n\n      str += `#${i} `;\n      if (!frame.isNative && !frame.isEval) {\n        let fileName = frame.fileName;\n        if (fileName.startsWith('file://')) fileName = fileName.substr('file://'.length);\n\n        if (fileName && fileName.startsWith('/')) {\n          str += this.openLocalFile(fileName, frame.lineNumber, frame.columnNumber);\n        }\n\n        str += this.replaceAppInFilePath(fileName);\n        if (frame.lineNumber !== null || frame.columnNumber !== null) {\n          str += `:${frame.lineNumber}:${frame.columnNumber}`;\n        }\n\n        if (fileName && fileName.startsWith('/')) {\n          str += '</a>';\n        }\n\n        str += ' ';\n      }\n\n      if (frame.functionName) {\n        str += frame.functionName;\n      } else if (frame.typeName) {\n        str += `${frame.typeName}.${frame.methodName || '<anonymous>'}`;\n      }\n\n      if (frame.isNative) {\n        str += ' [native]';\n      }\n\n      if (frame.isEval) {\n        str += ' [eval]';\n      }\n\n      if ((frame.file && frame.file.contents)) {\n        str += '</a></span>';\n        str += `<div style=\"display:${i === 0 ? 'block' : 'none'}\">`;\n\n        str += '<div style=\"margin-top: 5px\">';\n        str += '<b>File content :</b><br />';\n        str += this.highlightLine(frame.file.contents, frame.lineNumber, frame.columnNumber);\n        str += '</div>';\n\n        str += '</div>';\n      }\n\n      str += '\\n';\n    });\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  highlightLine(contents, lineNumber /* , columnNumber */) {\n    const style = 'background:#3F1F1F;';\n    const withLineNumbers = true;\n    const minmax = 4;\n\n    let hcontents;\n    try {\n      hcontents = highlight(contents);\n    } catch (err) {\n      hcontents = escape(contents);\n    }\n\n    hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n    const ok = lineNumber <= hcontents.length;\n    let firstLine;\n    let start;\n    let lineContent;\n    let end;\n\n    if (ok) {\n      firstLine = Math.max(0, minmax ? lineNumber - 1 - minmax : 0);\n      start = hcontents.slice(firstLine, lineNumber - 1);\n      lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n      end = hcontents.slice(lineNumber, lineNumber + minmax);\n    } else {\n      start = hcontents;\n    }\n\n        /* if (withLineNumbers) {\n            // $withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        } */\n\n    let content = this.lines(withLineNumbers, ok ? firstLine + 1 : 1, start);\n    if (ok) {\n      const attributes = { style };\n      content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n      content += this.lines(withLineNumbers, lineNumber + 1, end);\n    }\n\n    const preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n    return tag('pre', preAttrs, content, false);\n  }\n\n  /**\n   * @ignore\n   */\n  lines(withLineNumbers, startNumber, _lines) {\n    let content = '';\n    _lines.forEach((line) => {\n      content += this.line(withLineNumbers, startNumber + 1, {}, line);\n    });\n    return content;\n  }\n\n  /**\n   * @ignore\n   */\n  line(withLineNumbers, lineNumber, attributes, contentLine) {\n    attributes.style = `${attributes.style || ''}white-space:pre-wrap;`\n            + `${withLineNumbers ? 'padding-left:20px;' : ''}`;\n\n    if (withLineNumbers) {\n      contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + `${lineNumber}</i>${contentLine}`;\n    }\n\n    return tag('div', attributes, contentLine);\n  }\n}\n"],"names":["findSourceMap","sourceMap","retrieveSourceMap","source","url","map","SourceMapConsumer","frames","errorStackParser","parse","err","cache","Map","frame","isNative","isEval","fileName","file","getFileName","has","get","set","originalPosition","originalPositionFor","lineNumber","columnNumber","line","column","sourcesContent","indexSourceContent","sources","indexOf","tag","tagName","attributes","content","contentEscape","str","keys","forEach","key","escape","HtmlRenderer","options","Object","assign","filePath","generatedPath","sourcePath","startsWith","substr","length","fileProtocol","appPath","error","name","message","production","renderStack","stack","parseErrorStack","i","contents","openLocalFile","replaceAppInFilePath","functionName","typeName","methodName","highlightLine","withLineNumbers","minmax","hcontents","highlight","split","ok","firstLine","start","lineContent","end","Math","max","slice","lines","style","startNumber","_lines","contentLine"],"mappings":"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"}