{"version":3,"sources":["../src/index.js"],"names":["escape","highlight","parseErrorStack","tag","tagName","attributes","content","contentEscape","str","Object","keys","forEach","key","HtmlRenderer","options","assign","fileProtocol","filePath","lineNumber","columnNumber","generatedPath","sourcePath","startsWith","substr","length","appPath","error","name","message","production","renderStack","stack","frames","frame","i","file","contents","isNative","isEval","fileName","openLocalFile","replaceAppInFilePath","functionName","typeName","methodName","highlightLine","withLineNumbers","minmax","hcontents","err","split","ok","firstLine","start","lineContent","end","Math","max","slice","lines","line","style","startNumber","_lines","contentLine"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable max-len, max-lines, prettier/prettier */\n\nimport escape from 'escape-html';\nimport highlight from 'eshighlight-fb';\nimport parseErrorStack from './parseErrorStack';\n\nfunction tag(tagName, attributes, content, contentEscape) {\n  attributes = attributes || {};\n  let str = '';\n  Object.keys(attributes).forEach(key => {\n    str += ` ${key}`;\n    if (attributes[key]) {\n      str += `=\"${attributes[key] === true ? key : escape(attributes[key])}\"`;\n    }\n  });\n\n  return `<${tagName}${str}${content == null ? '/' :\n                  `>${contentEscape ? escape(content) : content}</${tagName}`}>`;\n}\n\nexport default class HtmlRenderer {\n  constructor(options) {\n    this.options = Object.assign({\n      fileProtocol: 'file',\n    }, options);\n  }\n\n  /**\n   * @ignore\n   */\n  openLocalFile(filePath, lineNumber, columnNumber) {\n    if (this.generatedPath && this.sourcePath && filePath.startsWith(this.generatedPath)) {\n      filePath = this.sourcePath + filePath.substr(this.generatedPath.length);\n    }\n\n    return `<a download href=\"${this.options.fileProtocol}://${escape(filePath)}`\n               + `${!lineNumber ? '' : `?${lineNumber}${!columnNumber ? '' : `:${columnNumber}`}`}\">`;\n  }\n\n  /**\n   * @ignore\n   */\n  replaceAppInFilePath(filePath) {\n    if (!filePath) return 'unknown';\n\n    if (this.appPath) {\n      filePath = `APP/${filePath.substr(this.appPath.length)}`;\n    }\n\n    return filePath;\n  }\n\n  /**\n   * @ignore\n   */\n  render(error) {\n    let str = '<div style=\"text-align: left\">';\n    str += `<h1 style=\"background:#FFF;color:#E07308;border:0;font-size:4em;margin:0;padding:1px 2px;\">${error.name}</h1>\\n`;\n    if (error.message) {\n      str += '<pre style=\"background:#FFF;color:#222;border:0;font-size:1em;margin:5px 0 0;padding: 0;white-space:pre-wrap;word-wrap:break-word\">';\n      str += escape(error.message);\n      str += '</pre>';\n    }\n\n    if (!this.options.production) {\n      str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;margin:10px 0 0;padding:1px 2px;\">Stack:</h5>\\n';\n      str += `<pre style=\"background:#FFF;color:#222;border:0;margin:0\">${this.renderStack(error)}</pre>`;\n      str += '<small><em>Click on the line number to display/hide the content file !</em></small>';\n\n      str += '<h5 style=\"background:#FFDDAA;color:#333;border:1px solid #E07308;margin:0;padding:1px 2px;\">Source Stack:</h5>\\n';\n      str += `<pre style=\"background:#FFF;color:#222;border:0;margin:0\">${escape(error.stack)}</pre>`;\n    }\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  renderStack(error) {\n    let frames = parseErrorStack(error);\n\n    let str = `<style>.string{ color: #EC7600; }\n.keyword, .null{ font-weight: bold; color: #93C763; }\n.numeric{ color: #FACD22; }\n.line-comment{ color: #66747B; }\n.identifier{ }\n.control-flow{ color: #93C763; }\n.azerty1{ color: #66747B; }\n.azerty2{ color: #678CB1; }\n.azerty5{ color: #F1F2F3; }\n.azerty6{ color: #8AC763; }\n.azerty7{ color: #E0E2E4; }\n.azerty9{ color: purple; }\n</style>`;\n    frames.forEach((frame, i) => {\n      if ((frame.file && frame.file.contents)) {\n        str += '<span><a href=\"javascript:;\" style=\"color:#CC7A00;text-decoration:none;outline:none;cursor:pointer\" '\n            // eslint-disable-next-line\n            + `onclick=\"var el=this.parentNode.nextElementSibling; el.style.display=el.style.display=='none'?'block':'none';\">`;\n      }\n\n      str += `#${i} `;\n      if (!frame.isNative && !frame.isEval) {\n        let fileName = frame.fileName;\n        if (fileName.startsWith('file://')) fileName = fileName.substr('file://'.length);\n\n        if (fileName && fileName.startsWith('/')) {\n          str += this.openLocalFile(fileName, frame.lineNumber, frame.columnNumber);\n        }\n\n        str += this.replaceAppInFilePath(fileName);\n        if (frame.lineNumber !== null || frame.columnNumber !== null) {\n          str += `:${frame.lineNumber}:${frame.columnNumber}`;\n        }\n\n        if (fileName && fileName.startsWith('/')) {\n          str += '</a>';\n        }\n\n        str += ' ';\n      }\n\n      if (frame.functionName) {\n        str += frame.functionName;\n      } else if (frame.typeName) {\n        str += `${frame.typeName}.${frame.methodName || '<anonymous>'}`;\n      }\n\n      if (frame.isNative) {\n        str += ' [native]';\n      }\n\n      if (frame.isEval) {\n        str += ' [eval]';\n      }\n\n      if ((frame.file && frame.file.contents)) {\n        str += '</a></span>';\n        str += `<div style=\"display:${i === 0 ? 'block' : 'none'}\">`;\n\n        str += '<div style=\"margin-top: 5px\">';\n        str += '<b>File content :</b><br />';\n        str += this.highlightLine(frame.file.contents, frame.lineNumber, frame.columnNumber);\n        str += '</div>';\n\n        str += '</div>';\n      }\n\n      str += '\\n';\n    });\n\n    return str;\n  }\n\n  /**\n   * @ignore\n   */\n  highlightLine(contents, lineNumber /* , columnNumber */) {\n    let style = 'background:#3F1F1F;';\n    let withLineNumbers = true;\n    let minmax = 4;\n\n    let hcontents;\n    try {\n      hcontents = highlight(contents);\n    } catch (err) {\n      hcontents = escape(contents);\n    }\n\n    hcontents = hcontents.split(/\\r\\n|\\n\\r|\\n|\\r/);\n\n    let ok = lineNumber <= hcontents.length;\n    let firstLine;\n    let start;\n    let lineContent;\n    let end;\n\n    if (ok) {\n      firstLine = Math.max(0, minmax ? lineNumber - 1 - minmax : 0);\n      start = hcontents.slice(firstLine, lineNumber - 1);\n      lineContent = lineNumber === 0 ? '' : hcontents[lineNumber - 1];\n      end = hcontents.slice(lineNumber, lineNumber + minmax);\n    } else {\n      start = hcontents;\n    }\n\n        /* if (withLineNumbers) {\n            // $withLineNumbers = '%'.strlen((string)($ok ? $line+$minmax : $minmax+1)).'d';\n        } */\n\n    let content = this.lines(withLineNumbers, ok ? firstLine + 1 : 1, start);\n    if (ok) {\n      let attributes = { style };\n      content += this.line(withLineNumbers, lineNumber, attributes, lineContent);\n      content += this.lines(withLineNumbers, lineNumber + 1, end);\n    }\n\n    let preAttrs = { style: 'background:#0F0F0F;color:#E0E2E4;border:0;padding:0;position:relative;' };\n    return tag('pre', preAttrs, content, false);\n  }\n\n  /**\n   * @ignore\n   */\n  lines(withLineNumbers, startNumber, _lines) {\n    let content = '';\n    _lines.forEach((line) => {\n      content += this.line(withLineNumbers, startNumber + 1, {}, line);\n    });\n    return content;\n  }\n\n  /**\n   * @ignore\n   */\n  line(withLineNumbers, lineNumber, attributes, contentLine) {\n    attributes.style = `${attributes.style || ''}white-space:pre-wrap;`\n            + `${withLineNumbers ? 'padding-left:20px;' : ''}`;\n\n    if (withLineNumbers) {\n      contentLine = '<i style=\"color:#AAA;font-size:7pt;position:absolute;left:1px;padding-top:1px;\">'\n                            + `${lineNumber}</i>${contentLine}`;\n    }\n\n    return tag('div', attributes, contentLine);\n  }\n}\n"]}